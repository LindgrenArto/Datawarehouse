<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/13/2019 9:14:40 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-K3DT06D7"
  DTS:CreatorName="LAPTOP-K3DT06D7\Käyttäjä"
  DTS:DTSID="{7C19DB7D-3AAA-4F91-8167-25391C876ECB}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="1035"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{9D6A78AE-DCD4-4459-B340-183C20C635EB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{527F60EC-66AA-420F-99C2-94A307690227}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Users\Käyttäjä\Desktop\excel\ListOfPersons.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Persons Into Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{59C4EE0F-9017-4ED9-B70C-20BF3756353E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Persons Into Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Persons Into Excel\List of Persons Workbook"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="List of Persons Workbook"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">PersonTable</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Persons Into Excel\List of Persons Workbook.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[Id]"
                      cachedDataType="i8"
                      cachedName="Id"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Id]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Id]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[FirstName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FirstName"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[FirstName]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[LastName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastName"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[LastName]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="City"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[City]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[DateOfBirth]"
                      cachedDataType="dbDate"
                      cachedName="DateOfBirth"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[DateOfBirth]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[DateOfBirth]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[Sex]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="Sex"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Sex]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Sex]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[EyeColor]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="EyeColor"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[EyeColor]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[EyeColor]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[ShoeSize]"
                      cachedDataType="i4"
                      cachedName="ShoeSize"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[ShoeSize]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[ShoeSize]" />
                    <inputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].Columns[Height]"
                      cachedDataType="i4"
                      cachedName="Height"
                      externalMetadataColumnId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Height]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Height]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Id]"
                      dataType="r8"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                      dataType="nText"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                      dataType="nText"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[City]"
                      dataType="nText"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[DateOfBirth]"
                      dataType="date"
                      name="DateOfBirth" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Sex]"
                      dataType="nText"
                      name="Sex" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[EyeColor]"
                      dataType="nText"
                      name="EyeColor" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[ShoeSize]"
                      dataType="r8"
                      name="ShoeSize" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input].ExternalColumns[Height]"
                      dataType="r8"
                      name="Height" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Persons Into Excel\List of Persons Workbook.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\List of Persons Workbook.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\List of Persons Workbook.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\List of Persons Workbook.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Persons Into Excel\Person table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Person table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Person]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Persons Into Excel\Person table.Connections[OleDbConnection]"
                  connectionManagerID="{010CDF29-0DF8-49D4-8F2A-536E8A005326}:external"
                  connectionManagerRefId="Project.ConnectionManagers[LAPTOP-K3DT06D7_SQLEXPRESS.PersonTestDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Id]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Id]"
                      name="Id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[FirstName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[FirstName]"
                      name="FirstName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[LastName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[LastName]"
                      name="LastName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[DateOfBirth]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[DateOfBirth]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[DateOfBirth]"
                      name="DateOfBirth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Sex]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Sex]"
                      length="10"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Sex]"
                      name="Sex"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[EyeColor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[EyeColor]"
                      length="10"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[EyeColor]"
                      name="EyeColor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[ShoeSize]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[ShoeSize]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[ShoeSize]"
                      name="ShoeSize"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Height]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Height]"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].Columns[Height]"
                      name="Height"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Id]"
                      dataType="i8"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                      dataType="wstr"
                      length="50"
                      name="FirstName" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                      dataType="wstr"
                      length="50"
                      name="LastName" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      dataType="wstr"
                      length="50"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[DateOfBirth]"
                      dataType="dbDate"
                      name="DateOfBirth" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Sex]"
                      dataType="wstr"
                      length="10"
                      name="Sex" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[EyeColor]"
                      dataType="wstr"
                      length="10"
                      name="EyeColor" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[ShoeSize]"
                      dataType="i4"
                      name="ShoeSize" />
                    <externalMetadataColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output].ExternalColumns[Height]"
                      dataType="i4"
                      name="Height" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Id]"
                      dataType="i8"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Id]"
                      name="Id" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                      name="FirstName" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[City]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[DateOfBirth]"
                      dataType="dbDate"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[DateOfBirth]"
                      name="DateOfBirth" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Sex]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Sex]"
                      name="Sex" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[EyeColor]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[EyeColor]"
                      name="EyeColor" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ShoeSize]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ShoeSize]"
                      name="ShoeSize" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Height]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[Height]"
                      name="Height" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Persons Into Excel.Paths[OLE DB Source Output]"
              endId="Package\Import Persons Into Excel\List of Persons Workbook.Inputs[Excel Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Import Persons Into Excel\Person table.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{1722D0EF-EDFD-4988-A61D-5BED48615683}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_482b9b1e2831483e8d4163475cdf8283"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_482b9b1e2831483e8d4163475cdf8283.Properties.Settings.get_Default():ST_482b9b1e2831483e8d4163475cdf8283.Properties.Sett" +
    "ings")]

namespace ST_482b9b1e2831483e8d4163475cdf8283.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_482b9b1e2831483e8d4163475cdf8283
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            MessageBox.Show("ETL starting....");

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_482b9b1e2831483e8d4163475cdf8283.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F4126D48-33F7-4A3C-A383-A548EB5745C7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_482b9b1e2831483e8d4163475cdf8283</RootNamespace>
    <AssemblyName>ST_482b9b1e2831483e8d4163475cdf8283</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_482b9b1e2831483e8d4163475cdf8283</msb:CodeName>
    <msb:DisplayName>ST_482b9b1e2831483e8d4163475cdf8283</msb:DisplayName>
    <msb:ProjectId>{29301409-6AE5-4D11-AA81-5E060938C1B5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_482b9b1e2831483e8d4163475cdf8283.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_482b9b1e2831483e8d4163475cdf8283")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_482b9b1e2831483e8d4163475cdf8283")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_482b9b1e2831483e8d4163475cdf8283.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_482b9b1e2831483e8d4163475cdf8283.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_482b9b1e2831483e8d4163475cdf8283.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_482b9b1e2831483e8d4163475cdf8283.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_482b9b1e2831483e8d4163475cdf8283.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_482b9b1e2831483e8d4163475cdf8283.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHDIY1wAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAAi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALAsAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
LAAAAAAAAEgAAAACAAUA0CAAACgLAAABAAAAAAAAAPgrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGJyAQAAcCgQAAAKJgIoEQAAChZvEgAACioeAigTAAAKKh4C
KBQAAAoqrn4BAAAELR5yIwAAcNADAAACKBUAAApvFgAACnMXAAAKgAEAAAR+AQAABCoafgIAAAQq
HgKAAgAABCoafgMAAAQqHgIoGAAACioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAApAMAACN+AAAQBAAAHAUAACNTdHJpbmdzAAAAACwJAACYAAAAI1VTAMQJ
AAAQAAAAI0dVSUQAAADUCQAAVAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAA
AB0AAAAFAAAABgAAAAkAAAABAAAAGAAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAA
AQAAAAAAGgMBAAAAAAAGAN0B4QMGAGwC4QMGACkBzgMPAFUEAAAGAFYBjwMGAMABjwMGAKEBjwMG
AFMCjwMGAP0BjwMGABYCjwMGAG0BjwMGAIgBkAIKADECyQIKAKgAyQIGAEkDQgMGAAwBzgMGAM8E
QgMGALEDAQQGAKEDegMOANwABAMOAD0BBAMOAMQAZQMGAPEA4QMSAAMFnAQSAOIEnAQKAPICyQIG
AHMAQgMGAE8AQgMGABIFjwMAAAAAJQAAAAAAAQABAAEAEABaAwEAOQABAAEAAAAQAAgEZARFAAEA
AwAAARAAkwRkBFkAAwAHAAMBAADBBAAAPQAEAAoAEQBOA1UAEQCYAFkAEQA/AF0ABgYuAGEAVoCx
BGQAVoB4AGQAUCAAAAAAhgBgAwYAAQBpIAAAAACGGMEDBgABAHEgAAAAAIMYwQMGAAEAeSAAAAAA
kwitA2gAAQClIAAAAACTCIAAbQABAKwgAAAAAJMIjAByAAEAtCAAAAAAlgjWBHgAAgC7IAAAAACG
GMEDBgACAMMgAAAAAJEYxwN9AAIAAAABAIoCCQDBAwEAEQDBAwYAGQDBAwoAKQDBAxAAMQDBAxAA
OQDBAxAAQQDBAxAASQDBAxAAUQDBAxAAWQDBAxAAYQDBAxAAaQDBAwYAgQDBAwYAqQDBAxUAuQDB
AwYAwQD+BBsAcQC5BCEA0QDvBAEAcQDBAwYAiQDBAwYA2QBhACYA2QAOBS0AkQDBAzIAsQDBAwYA
CAAUAEsACAAYAFAAKQBzALgALgALAJAALgATAJkALgAbALgALgAjAMEALgArAOoALgAzAOoALgA7
AOoALgBDAMEALgBLAPAALgBTAOoALgBbAAcBQwBjAFAASQBzALgAYQB7AFAAYwBrAFAAAwABAAQA
AwAAALEDgQAAAKAAhgAAANoEiwACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAEcbSEMA
AAAAAAABAAAABAAAAAAAAAAAAAAAOQA2AAAAAAAOAAAAAAAAAAAAAABCAKoCAAAAAAQAAAAAAAAA
AAAAADkAQgMAAAAABAAAAAAAAAAAAAAAOQCcBAAAAAAAAAAAAQAAABIEAAAFAAIAAAAAU1RfNDgy
YjliMWUyODMxNDgzZThkNDE2MzQ3NWNkZjgyODMAPE1vZHVsZT4AdmFsdWVfXwBtc2NvcmxpYgBk
ZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAVHlwZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzQ4MmI5YjFl
MjgzMTQ4M2U4ZDQxNjM0NzVjZGY4MjgzLmRsbABTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfNDgyYjliMWUyODMxNDgzZThkNDE2MzQ3NWNkZjgyODMuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzQ4MmI5YjFlMjgzMTQ4M2U4ZDQx
NjM0NzVjZGY4MjgzLlByb3BlcnRpZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5AAAAIUUAVABMACAA
cwB0AGEAcgB0AGkAbgBnAC4ALgAuAC4AAHFTAFQAXwA0ADgAMgBiADkAYgAxAGUAMgA4ADMAMQA0
ADgAMwBlADgAZAA0ADEANgAzADQANwA1AGMAZABmADgAMgA4ADMALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAER4+sQ87r5ArxGwV5kJewYABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEVEFAAERZQ4EIAASaQYAARJtEXEEIAASdQYgAgEOEnUIt3pcVhk04IkIiYRd
zYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMA
AAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzQ4MmI5YjFlMjgzMTQ4M2U4ZDQxNjM0NzVjZGY4MjgzAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANgs
AAAAAAAAAAAAAPIsAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkLAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEASENHGwAAAQBIQ0cbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA0ADgAMgBiADkAYgAxAGUAMgA4ADMAMQA0ADgAMwBlADgAZAA0ADEANgAzADQA
NwA1AGMAZABmADgAMgA4ADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA5ADgAMwAuADEANwAyADIANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA0ADgAMgBiADkAYgAxAGUAMgA4ADMAMQA0ADgAMwBlADgAZAA0ADEANgAzADQANwA1
AGMAZABmADgAMgA4ADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADQAOAAyAGIAOQBiADEAZQAyADgAMwAxADQAOAAzAGUAOABkADQAMQA2
ADMANAA3ADUAYwBkAGYAOAAyADgAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA0ADgAMgBiADkAYgAxAGUAMgA4ADMAMQA0ADgAMwBlADgAZAA0ADEANgAz
ADQANwA1AGMAZABmADgAMgA4ADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYAOQA4ADMALgAxADcAMgAyADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAOQA4ADMALgAxADcAMgAyADQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAABD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{EC313090-5D53-461A-AD14-5A72977D2632}"
      DTS:From="Package\Script Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Persons Into Excel" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="201,42"
          Id="Package\Import Persons Into Excel"
          TopLeft="171,166" />
        <NodeLayout
          Size="131,42"
          Id="Package\Script Task"
          TopLeft="201,79" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Persons Into Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="198,42"
          Id="Package\Import Persons Into Excel\List of Persons Workbook"
          TopLeft="112,192" />
        <NodeLayout
          Size="137,42"
          Id="Package\Import Persons Into Excel\Person table"
          TopLeft="139,56" />
        <EdgeLayout
          Id="Package\Import Persons Into Excel.Paths[OLE DB Source Output]"
          TopLeft="209.25,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94"
              Start="0,0"
              End="0,86.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Persons Into Excel\List of Persons Workbook">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Persons Into Excel\Person table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>